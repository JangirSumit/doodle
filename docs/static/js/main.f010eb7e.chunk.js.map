{"version":3,"sources":["constants/index.js","reducers/dateReducer.js","common/index.js","reducers/noteReducer.js","reducers/index.js","actions/index.js","components/Calendar.js","components/AddNote.js","components/UpdateNote.js","components/NoteTile.js","components/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_NOTE","UPDATE_NOTE","DELETE_NOTE","SHOW_UPDATE_NOTE","CHANGE_DATE","SET_DATE","initialState","Date","formatDate","date","toLocaleDateString","day","month","year","notes","showUpdateNote","editTile","reducer","combineReducers","state","action","type","payload","note","filter","n","key","newNotes","map","description","title","tileKey","connect","value","dispatch","changeDate","nextValue","setDate","props","onClickDay","onChange","addNote","data","clear","document","getElementById","Card","className","Form","Group","controlId","Label","Control","placeholder","as","rows","Button","variant","onClick","trim","alert","now","ownProps","updateNote","defaultValue","substring","deleteNote","Toast","onClose","Header","id","Body","Row","Col","xs","style","paddingRight","paddingLeft","textAlign","useState","active","showNotes","setshowNotes","showCurrentNotes","today","parse","getMonth","getDate","getFullYear","showPastNotes","showFutureNotes","useEffect","ButtonGroup","size","length","index","Container","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistedNotes","localStorage","getItem","JSON","store","createStore","subscribe","setItem","stringify","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.f010eb7e.chunk.js","sourcesContent":["export const ADD_NOTE = \"ADD_NOTE\";\r\nexport const UPDATE_NOTE = \"UPDATE_NOTE\";\r\nexport const DELETE_NOTE = \"DELETE_NOTE\";\r\nexport const SHOW_UPDATE_NOTE = \"SHOW_UPDATE_NOTE\";\r\n\r\nexport const CHANGE_DATE = \"CHANGE_DATE\";\r\nexport const SET_DATE = \"SET_DATE\";\r\n","import { CHANGE_DATE } from \"../constants\";\r\n\r\nconst initialState = new Date();\r\n\r\nexport const dateReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_DATE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const formatDate = (date) => {\r\n  return date.toLocaleDateString(\"en-US\", {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n  });\r\n};\r\n","import {\r\n  ADD_NOTE,\r\n  UPDATE_NOTE,\r\n  DELETE_NOTE,\r\n  SET_DATE,\r\n  SHOW_UPDATE_NOTE,\r\n} from \"../constants\";\r\nimport { formatDate } from \"../common\";\r\n\r\nconst initialState = {\r\n  date: formatDate(new Date()),\r\n  notes: [],\r\n  showUpdateNote: false,\r\n  editTile: {},\r\n};\r\n\r\nexport const noteReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATE:\r\n      return {\r\n        ...state,\r\n        date: formatDate(action.payload),\r\n      };\r\n    case ADD_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes, action.payload],\r\n      };\r\n\r\n    case DELETE_NOTE:\r\n      return {\r\n        ...state,\r\n        showUpdateNote: false,\r\n        notes: state.notes.filter((n) => n.key !== action.payload),\r\n      };\r\n    case SHOW_UPDATE_NOTE:\r\n      return {\r\n        ...state,\r\n        showUpdateNote: !!action.payload,\r\n        editTile: action.payload && {\r\n          ...state.notes.filter((n) => n.key === action.payload)[0],\r\n        },\r\n      };\r\n    case UPDATE_NOTE:\r\n      const newNotes = state.notes.map((note) => {\r\n        if (note.key === action.payload.key) {\r\n          note.description = action.payload.description;\r\n          note.title = action.payload.title;\r\n          return { ...note };\r\n        }\r\n        return note;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        showUpdateNote: false,\r\n        notes: [...newNotes],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { dateReducer } from \"./dateReducer\";\r\nimport { noteReducer } from \"./noteReducer\";\r\n\r\nexport const reducer = combineReducers({\r\n  date: dateReducer,\r\n  note: noteReducer,\r\n});\r\n","import {\r\n  ADD_NOTE,\r\n  UPDATE_NOTE,\r\n  DELETE_NOTE,\r\n  SET_DATE,\r\n  SHOW_UPDATE_NOTE,\r\n} from \"../constants\";\r\n\r\nexport const addNote = (data) => {\r\n  return {\r\n    type: ADD_NOTE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const updateNote = (data) => {\r\n  return {\r\n    type: UPDATE_NOTE,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const deleteNote = (tileKey) => {\r\n  return {\r\n    type: DELETE_NOTE,\r\n    payload: tileKey,\r\n  };\r\n};\r\n\r\nexport const changeDate = (nextDate) => {\r\n  return {\r\n    type: SET_DATE,\r\n    payload: nextDate,\r\n  };\r\n};\r\n\r\nexport const setDate = (date) => {\r\n  return {\r\n    type: SET_DATE,\r\n    payload: date,\r\n  };\r\n};\r\n\r\nexport const showUpdateNote = (tileKey) => {\r\n  return {\r\n    type: SHOW_UPDATE_NOTE,\r\n    payload: tileKey,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactCalendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { changeDate, setDate } from \"../actions\";\r\n\r\nfunction Calendar(props) {\r\n  return (\r\n    <ReactCalendar\r\n      onClickDay={(date) => props.setDate(date)}\r\n      onChange={(nextValue) => props.changeDate(nextValue)}\r\n      value={props.value}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { value: state.date.value };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeDate: (nextValue) => dispatch(changeDate(nextValue)),\r\n    setDate: (date) => dispatch(setDate(date)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNote } from \"../actions\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\n\r\nfunction AddNote(props) {\r\n  function onAddClick() {\r\n    if (!document.getElementById(\"formAddTitle\").value.trim()) {\r\n      alert(\"Please Enter Valid Title\");\r\n      return false;\r\n    }\r\n\r\n    props.addNote({\r\n      title: document.getElementById(\"formAddTitle\").value.trim(),\r\n      description: document.getElementById(\"formAddDescription\").value.trim(),\r\n      date: props.date,\r\n      key: Date.now(),\r\n    });\r\n    clear();\r\n  }\r\n\r\n  function onAddDiscardClick() {\r\n    clear();\r\n  }\r\n\r\n  function clear() {\r\n    document.getElementById(\"formAddTitle\").value = \"\";\r\n    document.getElementById(\"formAddDescription\").value = \"\";\r\n  }\r\n\r\n  return (\r\n    <Card className={\"add-note-wrapper\"}>\r\n      <h3>{`Add Note (${props.date})`}</h3>\r\n      <Form>\r\n        <Form.Group controlId=\"formAddTitle\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Title\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formAddDescription\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control as=\"textarea\" rows={3} placeholder=\"Description\" />\r\n        </Form.Group>\r\n      </Form>\r\n      <p>\r\n        <Button variant=\"primary\" onClick={onAddClick}>\r\n          Add\r\n        </Button>{\" \"}\r\n        <Button variant=\"secondary\" onClick={onAddDiscardClick}>\r\n          Discard\r\n        </Button>\r\n      </p>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    date: state.note.date,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNote: (data) => dispatch(addNote(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNote);\r\n","import React from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateNote, showUpdateNote } from \"../actions\";\r\n\r\nfunction UpdateNote(props) {\r\n  function onUpdateClick() {\r\n    if (!document.getElementById(\"formUpdateTitle\").value.trim()) {\r\n      alert(\"Please Enter Valid Title\");\r\n      return false;\r\n    }\r\n\r\n    props.updateNote({\r\n      title: document.getElementById(\"formUpdateTitle\").value.trim(),\r\n      description: document\r\n        .getElementById(\"formUpdateDescription\")\r\n        .value.trim(),\r\n      date: props.note.date,\r\n      key: props.note.key,\r\n    });\r\n    document.getElementById(\"formUpdateTitle\").value = \"\";\r\n    document.getElementById(\"formUpdateDescription\").value = \"\";\r\n  }\r\n\r\n  return (\r\n    <Card className={\"update-note-wrapper\"}>\r\n      <h3>{`Update Note (${props.note.date})`}</h3>\r\n      <Form>\r\n        <Form.Group controlId=\"formUpdateTitle\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            defaultValue={props.note && props.note.title}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formUpdateDescription\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Description\"\r\n            defaultValue={\r\n              props.note && props.note.description.substring(0, 100)\r\n            }\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <p>\r\n        <Button variant=\"primary\" onClick={onUpdateClick}>\r\n          Update\r\n        </Button>{\" \"}\r\n        <Button variant=\"secondary\" onClick={props.showUpdateNote}>\r\n          Discard\r\n        </Button>\r\n      </p>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    note: state.note.editTile,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNote: (data) => dispatch(updateNote(data)),\r\n    showUpdateNote: () => dispatch(showUpdateNote(false)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateNote);\r\n","import React from \"react\";\r\nimport { Button, Toast, Row, Col, Card } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteNote, showUpdateNote } from \"../actions\";\r\n\r\nfunction NoteTile(props) {\r\n  return (\r\n    <Toast className=\"note\" onClose={() => props.deleteNote(props.note.key)}>\r\n      <Toast.Header>\r\n        <strong className=\"mr-auto\">\r\n          {props.id}. {props.note.title}\r\n        </strong>\r\n        <small>\r\n          <div>{props.note.date}</div>\r\n        </small>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Row>\r\n          <Col xs={9} style={{ paddingRight: \"5px\" }}>\r\n            <small>{props.note.description}</small>\r\n          </Col>\r\n          <Col xs={3} style={{ paddingLeft: \"5px\", textAlign: \"right\" }}>\r\n            <Button onClick={() => props.showUpdateNote(props.note.key)}>\r\n              Edit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Toast.Body>\r\n    </Toast>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return ownProps;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteNote: (tileKey) => dispatch(deleteNote(tileKey)),\r\n    showUpdateNote: (tileKey) => dispatch(showUpdateNote(tileKey)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteTile);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, ButtonGroup, Button, Row, Col } from \"react-bootstrap\";\r\nimport NoteTile from \"./NoteTile\";\r\n\r\nfunction Notes(props) {\r\n  const [showNotes, setshowNotes] = useState({\r\n    active: 1,\r\n    notes: props.notes,\r\n  });\r\n\r\n  useEffect(() => {\r\n    switch (showNotes.active) {\r\n      case 0:\r\n        showPastNotes();\r\n        break;\r\n      case 1:\r\n        showCurrentNotes();\r\n        break;\r\n      case 2:\r\n        showFutureNotes();\r\n        break;\r\n      default:\r\n        showCurrentNotes();\r\n        break;\r\n    }\r\n  }, [props.notes]);\r\n\r\n  function showCurrentNotes() {\r\n    const today = new Date();\r\n    setshowNotes({\r\n      active: 1,\r\n      notes: [\r\n        ...props.notes.filter(\r\n          (n) =>\r\n            Date.parse(n.date) ===\r\n            Date.parse(\r\n              `${\r\n                today.getMonth() + 1\r\n              }/${today.getDate()}/${today.getFullYear()}`\r\n            )\r\n        ),\r\n      ],\r\n    });\r\n  }\r\n\r\n  function showPastNotes() {\r\n    const today = new Date();\r\n    setshowNotes({\r\n      active: 0,\r\n      notes: [\r\n        ...props.notes.filter(\r\n          (n) =>\r\n            Date.parse(n.date) <\r\n            Date.parse(\r\n              `${\r\n                today.getMonth() + 1\r\n              }/${today.getDate()}/${today.getFullYear()}`\r\n            )\r\n        ),\r\n      ],\r\n    });\r\n  }\r\n\r\n  function showFutureNotes() {\r\n    const today = new Date();\r\n    setshowNotes({\r\n      active: 2,\r\n      notes: [\r\n        ...props.notes.filter(\r\n          (n) =>\r\n            Date.parse(n.date) >\r\n            Date.parse(\r\n              `${\r\n                today.getMonth() + 1\r\n              }/${today.getDate()}/${today.getFullYear()}`\r\n            )\r\n        ),\r\n      ],\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card className=\"notes-wrapper\">\r\n      <Row>\r\n        <Col>\r\n          <h3>Notes</h3>\r\n        </Col>\r\n        <Col style={{ textAlign: \"right\" }}>\r\n          <ButtonGroup size=\"sm\">\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={showPastNotes}\r\n              active={showNotes.active === 0}\r\n            >\r\n              Past\r\n            </Button>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={showCurrentNotes}\r\n              active={showNotes.active === 1}\r\n            >\r\n              Current\r\n            </Button>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={showFutureNotes}\r\n              active={showNotes.active === 2}\r\n            >\r\n              Future\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Col>\r\n      </Row>\r\n      {showNotes.notes && showNotes.notes.length ? (\r\n        showNotes.notes.map((n, index) => (\r\n          <NoteTile note={n} key={index} id={index + 1} />\r\n        ))\r\n      ) : (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h4>No Notes</h4>\r\n          <h5>Create your first Note</h5>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.note.notes,\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     showCurrentNotes: () => dispatch(showCurrentNotes()),\r\n//     showPastNotes: () => dispatch(showPastNotes()),\r\n//     showFutureNotes: () => dispatch(showFutureNotes()),\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps)(Notes);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Calendar from \"./components/Calendar\";\nimport AddNote from \"./components/AddNote\";\nimport UpdateNote from \"./components/UpdateNote\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Notes from \"./components/Notes\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nfunction App(props) {\n  return (\n    <>\n      <header>Doodle</header>\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col xs={12} md={6}>\n              <Calendar />\n            </Col>\n            <Col xs={12} md={6}>\n              <Notes />\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <AddNote />\n            </Col>\n            <Col xs={12} md={6}>\n              {props.showUpdateNote && <UpdateNote />}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <footer>\n        Copyright &copy; 2020 by Sumit Jangir. All Rights Reserved.\n      </footer>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    date: state.note.date,\n    notes: state.note.notes,\n    showUpdateNote: state.note.showUpdateNote,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { reducer } from \"../src/reducers\";\nimport { createStore } from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { formatDate } from \"../src/common\";\n\nconst persistedNotes = localStorage.getItem(\"notes\")\n  ? JSON.parse(localStorage.getItem(\"notes\"))\n  : [];\n\nconst store = createStore(reducer, {\n  note: { notes: persistedNotes, date: formatDate(new Date()) },\n  date: new Date(),\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"notes\", JSON.stringify(store.getState().note.notes));\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}