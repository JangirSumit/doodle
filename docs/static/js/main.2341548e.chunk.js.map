{"version":3,"sources":["components/Calendar.js","components/AddNote.js","components/UpdateNote.js","components/NoteTile.js","components/Notes.js","App.js","reportWebVitals.js","index.js"],"names":["Calendar","props","useState","Date","value","setValue","onClickDay","date","onDateClick","onChange","nextValue","defaultValue","AddNote","clear","document","getElementById","Card","className","Form","Group","controlId","Label","Control","type","placeholder","as","rows","Button","variant","onClick","trim","alert","onAddClick","title","description","key","now","UpdateNote","note","substring","onUpdateClick","onUpdateDiscardClick","NoteTile","Toast","onClose","onNoteDelete","Header","id","Body","Row","Col","xs","style","paddingRight","paddingLeft","textAlign","onEditClick","Notes","notes","length","map","n","index","App","formatDate","setDate","JSON","parse","localStorage","getItem","setNotes","showAddNote","showUpdateNote","setShowUpdateNote","editTile","setEditTile","toLocaleDateString","day","month","year","Container","md","tileKey","selectedTile","filter","remainingNotes","setItem","stringify","data","newNotes","removeItem","flag","findNote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2341548e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactCalendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nfunction Calendar(props) {\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  function onChange(nextValue) {\r\n    setValue(nextValue);\r\n  }\r\n\r\n  function onDateClick(date) {\r\n    props.onDateClick(date);\r\n  }\r\n\r\n  return (\r\n    <ReactCalendar\r\n      onClickDay={onDateClick}\r\n      onChange={onChange}\r\n      value={value}\r\n      defaultValue={[new Date(\"11/17/2020\"), new Date(\"11/18/2020\")]}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\n\r\nfunction AddNote(props) {\r\n  function onAddClick() {\r\n    if (!document.getElementById(\"formAddTitle\").value.trim()) {\r\n      alert(\"Please Enter Valid Title\");\r\n    }\r\n\r\n    props.onAddClick({\r\n      title: document.getElementById(\"formAddTitle\").value.trim(),\r\n      description: document.getElementById(\"formAddDescription\").value.trim(),\r\n      date: props.date,\r\n      key: Date.now(),\r\n    });\r\n    clear();\r\n  }\r\n\r\n  function onAddDiscardClick() {\r\n    clear();\r\n  }\r\n\r\n  function clear() {\r\n    document.getElementById(\"formAddTitle\").value = \"\";\r\n    document.getElementById(\"formAddDescription\").value = \"\";\r\n  }\r\n\r\n  return (\r\n    <Card className={\"add-note-wrapper\"}>\r\n      <h3>{`Add Note (${props.date})`}</h3>\r\n      <Form>\r\n        <Form.Group controlId=\"formAddTitle\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Title\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formAddDescription\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control as=\"textarea\" rows={3} placeholder=\"Description\" />\r\n        </Form.Group>\r\n      </Form>\r\n      <p>\r\n        <Button variant=\"primary\" onClick={onAddClick}>\r\n          Add\r\n        </Button>{\" \"}\r\n        <Button variant=\"secondary\" onClick={onAddDiscardClick}>\r\n          Discard\r\n        </Button>\r\n      </p>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n","import React from \"react\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\n\r\nfunction UpdateNote(props) {\r\n  function onUpdateClick() {\r\n    if (!document.getElementById(\"formUpdateTitle\").value.trim()) {\r\n      alert(\"Please Enter Valid Title\");\r\n    }\r\n\r\n    props.onUpdateClick({\r\n      title: document.getElementById(\"formUpdateTitle\").value.trim(),\r\n      description: document\r\n        .getElementById(\"formUpdateDescription\")\r\n        .value.trim(),\r\n      date: props.note.date,\r\n      key: props.note.key,\r\n    });\r\n    document.getElementById(\"formUpdateTitle\").value = \"\";\r\n    document.getElementById(\"formUpdateDescription\").value = \"\";\r\n  }\r\n\r\n  function onUpdateDiscardClick() {\r\n    props.onUpdateDiscardClick(false);\r\n  }\r\n\r\n  return (\r\n    <Card className={\"update-note-wrapper\"}>\r\n      <h3>{`Update Note (${props.note.date})`}</h3>\r\n      <Form>\r\n        <Form.Group controlId=\"formUpdateTitle\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            defaultValue={props.note && props.note.title}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formUpdateDescription\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Description\"\r\n            defaultValue={\r\n              props.note && props.note.description.substring(0, 100)\r\n            }\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <p>\r\n        <Button variant=\"primary\" onClick={onUpdateClick}>\r\n          Update\r\n        </Button>{\" \"}\r\n        <Button variant=\"secondary\" onClick={onUpdateDiscardClick}>\r\n          Discard\r\n        </Button>\r\n      </p>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default UpdateNote;\r\n","import React from \"react\";\r\nimport { Button, Toast, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nfunction NoteTile(props) {\r\n  return (\r\n    <Toast className=\"note\" onClose={() => props.onNoteDelete(props.note.key)}>\r\n      <Toast.Header>\r\n        <strong className=\"mr-auto\">\r\n          {props.id}. {props.note.title}\r\n        </strong>\r\n        <small>\r\n          <div>{props.note.date}</div>\r\n        </small>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        <Row>\r\n          <Col xs={9} style={{ paddingRight: \"5px\" }}>\r\n            <small>{props.note.description}</small>\r\n          </Col>\r\n          <Col xs={3} style={{ paddingLeft: \"5px\", textAlign: \"right\" }}>\r\n            <Button onClick={() => props.onEditClick(props.note.key)}>\r\n              Edit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Toast.Body>\r\n    </Toast>\r\n  );\r\n}\r\n\r\nexport default NoteTile;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport NoteTile from \"./NoteTile\";\r\n\r\nfunction Notes({ notes, onEditClick, onNoteDelete }) {\r\n  return (\r\n    <Card className=\"notes-wrapper\">\r\n      <h3>Notes</h3>\r\n      {notes && notes.length ? (\r\n        notes.map((n, index) => (\r\n          <NoteTile\r\n            note={n}\r\n            key={index}\r\n            id={index + 1}\r\n            onEditClick={onEditClick}\r\n            onNoteDelete={onNoteDelete}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h4>No Notes</h4>\r\n          <h5>Create your first Note</h5>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","import React, { useState } from \"react\";\nimport Calendar from \"./components/Calendar\";\nimport AddNote from \"./components/AddNote\";\nimport UpdateNote from \"./components/UpdateNote\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Notes from \"./components/Notes\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nfunction App() {\n  const [date, setDate] = useState(formatDate(new Date()));\n  const [notes, setNotes] = useState(JSON.parse(localStorage.getItem(\"notes\")));\n  const [showAddNote, setShowAddNote] = useState(true);\n  const [showUpdateNote, setShowUpdateNote] = useState(false);\n  const [editTile, setEditTile] = useState({});\n\n  function onDateClick(date) {\n    setDate(formatDate(date));\n  }\n\n  function onAddClick(data) {\n    let notes = localStorage.getItem(\"notes\");\n    let newNotes = [];\n    if (notes && notes.length) {\n      localStorage.removeItem(\"notes\");\n    }\n\n    if (!notes) {\n      newNotes = [data];\n    } else {\n      notes = JSON.parse(notes);\n      newNotes = [...notes, data];\n    }\n\n    localStorage.setItem(\"notes\", JSON.stringify(newNotes));\n    setNotes(newNotes);\n  }\n\n  function onEditClick(tileKey) {\n    const selectedTile = notes.filter((n) => n.key === tileKey)[0];\n    setEditTile(selectedTile);\n    setShowUpdateNote(true);\n  }\n\n  function onUpdateDiscardClick(flag) {\n    setShowUpdateNote(flag);\n  }\n\n  function onUpdateClick(note) {\n    const findNote = notes.filter((n) => n.key === note.key)[0];\n    findNote.description = note.description;\n    findNote.title = note.title;\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n    setNotes([...notes]);\n  }\n\n  function onNoteDelete(tileKey) {\n    setShowUpdateNote(false);\n    const remainingNotes = notes.filter((n) => n.key !== tileKey);\n    localStorage.setItem(\"notes\", JSON.stringify(remainingNotes));\n    setNotes(remainingNotes);\n  }\n\n  function formatDate(date) {\n    return date.toLocaleDateString(\"en-IN\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    });\n  }\n\n  return (\n    <>\n      <header>Doodle</header>\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col xs={12} md={6}>\n              <Calendar onDateClick={onDateClick} />\n            </Col>\n            <Col xs={12} md={6}>\n              <Notes\n                notes={notes}\n                onEditClick={onEditClick}\n                onNoteDelete={onNoteDelete}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} md={6}>\n              {showAddNote && <AddNote date={date} onAddClick={onAddClick} />}\n            </Col>\n            <Col xs={12} md={6}>\n              {showUpdateNote && (\n                <UpdateNote\n                  note={editTile}\n                  onUpdateDiscardClick={onUpdateDiscardClick}\n                  onUpdateClick={onUpdateClick}\n                />\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      <footer>\n        Copyright &copy; 2020 by Sumit Jangir. All Rights Reserved.\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}